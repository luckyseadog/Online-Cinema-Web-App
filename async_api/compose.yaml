version: '3'
services:
  postgres:
    image: postgres:16
    volumes:
      - $HOME/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 10s

  django:
    build: ./admin
    env_file:
      - .env
    volumes:
      - ./admin/static:/opt/app/static
    depends_on:
      postgres:
        condition: service_healthy

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
     - esdata:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200/_cat/health"]
      interval: 5s
      timeout: 10s

  redis:
    image: redis/redis-stack-server:latest
    volumes:
     - redisdata:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  etl:
    build: ./etl
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy
      redis:
        condition: service_healthy

  fastapi:
    build: ./fastapi_api
    env_file:
      - .env
    depends_on:
      elastic:
        condition: service_healthy
      redis:
        condition: service_healthy
    
  redis-auth:
    image: redis/redis-stack-server:latest
    volumes:
     - redis-auth-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
  
  postgres-auth:
    image: postgres:16
    volumes:
     - postgres-auth-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: "${AUTH_DB_PASSWORD}"
      POSTGRES_USER: "${AUTH_DB_USER}"
      POSTGRES_DB: "${AUTH_DB_NAME}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d ${AUTH_DB_NAME}"]
      interval: 5s
      timeout: 10s
  
  fastapi-auth:
    build: ./auth_service
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres-auth:
        condition: service_healthy
      redis-auth:
        condition: service_healthy

  nginx:
    image: nginx:1.25.3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ./admin/static:/static:ro
      - ./data:/data:ro
    depends_on:
      - django
      - fastapi
      - etl
      - fastapi-auth
    ports:
      - "80:80"

volumes:
  esdata:
    driver: local
  redisdata:
    driver: local
  redis-auth-data:
    driver: local
  postgres-auth-data:
    driver: local
